/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-light: 300;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary-color: #716cfe;
    --font-Roboto-flex: "Roboto Flex", sans-serif;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-7 {
    top: calc(var(--spacing) * 7);
  }
  .top-\[30px\] {
    top: 30px;
  }
  .top-\[32px\] {
    top: 32px;
  }
  .top-\[36px\] {
    top: 36px;
  }
  .top-\[40\%\] {
    top: 40%;
  }
  .top-\[40px\] {
    top: 40px;
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .top-\[60\%\] {
    top: 60%;
  }
  .right-7 {
    right: calc(var(--spacing) * 7);
  }
  .right-\[-100\%\] {
    right: -100%;
  }
  .right-\[-200px\] {
    right: -200px;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-\[-50px\] {
    bottom: -50px;
  }
  .bottom-\[-70px\] {
    bottom: -70px;
  }
  .bottom-\[-100px\] {
    bottom: -100px;
  }
  .bottom-\[-220px\] {
    bottom: -220px;
  }
  .bottom-\[-370px\] {
    bottom: -370px;
  }
  .bottom-\[-400px\] {
    bottom: -400px;
  }
  .left-\[-18px\] {
    left: -18px;
  }
  .left-\[-200px\] {
    left: -200px;
  }
  .left-\[18px\] {
    left: 18px;
  }
  .left-\[32px\] {
    left: 32px;
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .left-\[55px\] {
    left: 55px;
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .-z-20 {
    z-index: calc(20 * -1);
  }
  .-z-30 {
    z-index: calc(30 * -1);
  }
  .-z-40 {
    z-index: calc(40 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-\[-60\] {
    z-index: -60;
  }
  .z-\[-70\] {
    z-index: -70;
  }
  .z-\[111\] {
    z-index: 111;
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-18 {
    margin-top: calc(var(--spacing) * 18);
  }
  .mt-\[63px\] {
    margin-top: 63px;
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-\[83px\] {
    margin-bottom: 83px;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .h-\[1px\] {
    height: 1px;
  }
  .h-\[6px\] {
    height: 6px;
  }
  .h-\[28px\] {
    height: 28px;
  }
  .h-\[32px\] {
    height: 32px;
  }
  .h-\[54px\] {
    height: 54px;
  }
  .h-\[626px\] {
    height: 626px;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[6px\] {
    max-height: 6px;
  }
  .max-h-\[368px\] {
    max-height: 368px;
  }
  .min-h-\[6px\] {
    min-height: 6px;
  }
  .min-h-\[218px\] {
    min-height: 218px;
  }
  .min-h-\[368px\] {
    min-height: 368px;
  }
  .min-h-\[626px\] {
    min-height: 626px;
  }
  .w-\[28px\] {
    width: 28px;
  }
  .w-\[32px\] {
    width: 32px;
  }
  .w-\[54px\] {
    width: 54px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-\[820px\] {
    width: 820px;
  }
  .w-\[1020px\] {
    width: 1020px;
  }
  .w-\[1050px\] {
    width: 1050px;
  }
  .w-\[2200px\] {
    width: 2200px;
  }
  .w-\[2500px\] {
    width: 2500px;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .max-w-\[342px\] {
    max-width: 342px;
  }
  .max-w-\[344px\] {
    max-width: 344px;
  }
  .max-w-\[350px\] {
    max-width: 350px;
  }
  .max-w-\[363px\] {
    max-width: 363px;
  }
  .max-w-\[464px\] {
    max-width: 464px;
  }
  .max-w-\[468px\] {
    max-width: 468px;
  }
  .max-w-\[612px\] {
    max-width: 612px;
  }
  .max-w-\[720px\] {
    max-width: 720px;
  }
  .max-w-\[768px\] {
    max-width: 768px;
  }
  .max-w-\[835px\] {
    max-width: 835px;
  }
  .max-w-\[1440px\] {
    max-width: 1440px;
  }
  .max-w-\[1920px\] {
    max-width: 1920px;
  }
  .min-w-\[196px\] {
    min-width: 196px;
  }
  .min-w-\[279px\] {
    min-width: 279px;
  }
  .min-w-\[350px\] {
    min-width: 350px;
  }
  .min-w-\[620px\] {
    min-width: 620px;
  }
  .min-w-\[720px\] {
    min-width: 720px;
  }
  .min-w-\[820px\] {
    min-width: 820px;
  }
  .min-w-\[880px\] {
    min-width: 880px;
  }
  .min-w-\[1020px\] {
    min-width: 1020px;
  }
  .min-w-\[2200px\] {
    min-width: 2200px;
  }
  .min-w-\[2500px\] {
    min-width: 2500px;
  }
  .min-w-auto {
    min-width: auto;
  }
  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-40\%\] {
    --tw-translate-y: -40%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-60\%\] {
    --tw-translate-y: -60%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .transform-\[translateY\(45\%\)\] {
    transform: translateY(45%);
  }
  .transform-\[translateY\(60\%\)\] {
    transform: translateY(60%);
  }
  .transform-\[translateY\(62\%\)\] {
    transform: translateY(62%);
  }
  .transform-\[translateY\(65\%\)\] {
    transform: translateY(65%);
  }
  .transform-\[translateY\(75\%\)\] {
    transform: translateY(75%);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-4\.5 {
    gap: calc(var(--spacing) * 4.5);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }
  .gap-\[8px\] {
    gap: 8px;
  }
  .gap-\[9px\] {
    gap: 9px;
  }
  .gap-\[52px\] {
    gap: 52px;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-\[4px\] {
    border-radius: 4px;
  }
  .rounded-\[6px\] {
    border-radius: 6px;
  }
  .rounded-\[100px\] {
    border-radius: 100px;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-\[\#8B56DF\] {
    border-color: #8B56DF;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-white\/4 {
    border-color: color-mix(in srgb, #fff 4%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 4%, transparent);
    }
  }
  .border-white\/12 {
    border-color: color-mix(in srgb, #fff 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 12%, transparent);
    }
  }
  .border-white\/40 {
    border-color: color-mix(in srgb, #fff 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .bg-\[\#0D0D0D\] {
    background-color: #0D0D0D;
  }
  .bg-\[\#040404\] {
    background-color: #040404;
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-primary-color\/12 {
    background-color: color-mix(in srgb, #716cfe 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-color) 12%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/12 {
    background-color: color-mix(in srgb, #fff 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 12%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-none {
    background-image: none;
  }
  .from-\[\#0D0D0D\] {
    --tw-gradient-from: #0D0D0D;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#716CFF\] {
    --tw-gradient-from: #716CFF;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#000000\] {
    --tw-gradient-to: #000000;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#5C0BCD\] {
    --tw-gradient-to: #5C0BCD;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .\[mask-image\:linear-gradient\(to_left_top\,black_0\%\,transparent_90\%\,\#635CF4_100\%\)\] {
    mask-image: linear-gradient(to left top,black 0%,transparent 90%,#635CF4 100%);
  }
  .\[mask-image\:linear-gradient\(to_right_top\,black_0\%\,transparent_90\%\,\#635CF4_100\%\)\] {
    mask-image: linear-gradient(to right top,black 0%,transparent 90%,#635CF4 100%);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4\.5 {
    padding: calc(var(--spacing) * 4.5);
  }
  .p-5\.5 {
    padding: calc(var(--spacing) * 5.5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .text-center {
    text-align: center;
  }
  .font-Roboto-flex {
    font-family: var(--font-Roboto-flex);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[32px\] {
    font-size: 32px;
  }
  .leading-\[120\%\] {
    --tw-leading: 120%;
    line-height: 120%;
  }
  .leading-\[125\%\] {
    --tw-leading: 125%;
    line-height: 125%;
  }
  .leading-\[150\%\] {
    --tw-leading: 150%;
    line-height: 150%;
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-\[-0\.04em\] {
    --tw-tracking: -0.04em;
    letter-spacing: -0.04em;
  }
  .text-\[\#A6A6A6\] {
    color: #A6A6A6;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-primary-color {
    color: var(--color-primary-color);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/25 {
    color: color-mix(in srgb, #fff 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 25%, transparent);
    }
  }
  .text-white\/30 {
    color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .text-white\/50 {
    color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .opacity-20 {
    opacity: 20%;
  }
  .mix-blend-plus-lighter {
    mix-blend-mode: plus-lighter;
  }
  .shadow-\[inset_0_-2px_16px_rgba\(255\,255\,255\,0\.48\)\] {
    --tw-shadow: inset 0 -2px 16px var(--tw-shadow-color, rgba(255,255,255,0.48));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .hover\:border-white\/20 {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .hover\:text-white\/60 {
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #fff 60%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
      }
    }
  }
  .hover\:opacity-80 {
    &:hover {
      @media (hover: hover) {
        opacity: 80%;
      }
    }
  }
  .\31 440px\:flex {
    @media (width >= 1440px) {
      display: flex;
    }
  }
  .sm\:max-w-\[428px\] {
    @media (width >= 40rem) {
      max-width: 428px;
    }
  }
  .sm\:min-w-\[428px\] {
    @media (width >= 40rem) {
      min-width: 428px;
    }
  }
  .sm\:text-\[56px\] {
    @media (width >= 40rem) {
      font-size: 56px;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:w-auto {
    @media (width >= 64rem) {
      width: auto;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:border {
    @media (width >= 64rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .lg\:bg-\[\#0D0D0D\] {
    @media (width >= 64rem) {
      background-color: #0D0D0D;
    }
  }
  .lg\:p-0 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
}
* {
  box-sizing: border-box;
  font-family: "Inter", sans-serif;
}
::selection {
  background-color: #716cfe;
}
::-webkit-scrollbar {
  width: 10px;
}
::-webkit-scrollbar-thumb {
  background-color: #716cfe;
}
.loader {
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  background-color: #000000;
  position: fixed;
  display: flex;
  transition: opacity 0.5s ease-in-out;
  justify-content: center;
  align-items: center;
  z-index: 99999;
  overflow: hidden;
}
.loader_image {
  width: 50px;
  height: 50px;
  filter: drop-shadow(0 0 8px #716cfe);
}
.loader_image path:first-child {
  animation: slideFromBottom 0.8s ease-out forwards;
  transform-origin: center;
}
.loader_image path:last-child {
  animation: slideFromTop 0.8s ease-out forwards;
  transform-origin: center;
}
@keyframes slideFromBottom {
  0% {
    transform: translateY(60px);
    opacity: 0;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes slideFromTop {
  0% {
    transform: translateY(-60px);
    opacity: 0;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
.loader_image {
  animation: pulseAfterConnect 2s infinite ease-in-out;
  animation-delay: 0.8s;
}
@keyframes pulseAfterConnect {
  0% {
    transform: scale(1);
    filter: drop-shadow(0 0 8px #716cfe) brightness(1);
  }
  50% {
    transform: scale(1.05);
    filter: drop-shadow(0 0 15px #716cfe) brightness(1.2);
  }
  100% {
    transform: scale(1);
    filter: drop-shadow(0 0 8px #716cfe) brightness(1);
  }
}
.loader.fade-out {
  opacity: 0;
  pointer-events: none;
}
.customBorder {
  position: relative;
  box-sizing: border-box;
}
.customBorder::before {
  content: "";
  z-index: -1;
  position: absolute;
  top: -1px;
  left: -1px;
  bottom: -1px;
  right: -1px;
  background: linear-gradient(to bottom, #716cfe 0%, #6A22D1 100%);
  border-radius: 6px;
}
.fade-right {
  position: relative;
}
.fade-right::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));
  pointer-events: none;
}
.customBorderVideo {
  position: relative;
  z-index: 0;
}
.customBorderVideo::before {
  z-index: -1;
  content: "";
  position: absolute;
  top: -1px;
  left: -1px;
  left: -1px;
  bottom: -1px;
  border-radius: 24px;
  background: linear-gradient(to bottom, #716BFE 0%, black 100%);
}
.customBorderDashboardNumber {
  position: relative;
}
.customBorderDashboardNumber::before {
  position: absolute;
  top: -1px;
  content: "";
  z-index: -1;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 6px;
  background: linear-gradient(to bottom, #070707 0%, #4F4F4F 100%);
}
.customBorderConnect::before {
  position: absolute;
  top: -1px;
  content: "";
  z-index: -1;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 6px;
  background: linear-gradient(to bottom, #736CFF 0%, #8B56DF 100%);
}
.customBorderNumberRoadmap {
  position: relative;
}
.customBorderNumberRoadmap::before {
  position: absolute;
  top: -1px;
  left: -1px;
  bottom: -1px;
  right: -1px;
  content: "";
  z-index: -1;
  border-radius: 16px;
  background: linear-gradient(to bottom, #9E9AFF 0%, #E8DDF9 100%);
}
.customBorderFaq {
  position: relative;
}
.customBorderFaq::before {
  position: absolute;
  top: -1px;
  left: -1px;
  bottom: -1px;
  right: -1px;
  content: "";
  z-index: -1;
  border-radius: 6px;
  background: linear-gradient(to bottom, #726AFF 0%, #8C55DC 100%);
}
.backdrop {
  top: 0;
  left: 0;
  z-index: 99;
  background-color: #0a0a0a71;
  position: fixed;
  width: 100vw;
  height: 100vh;
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}
.backdrop.active {
  opacity: 1;
}
#mobileMenuContent.active {
  right: 0;
}
.active>div>svg>path {
  stroke-opacity: 1;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
